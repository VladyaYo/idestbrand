{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/vladtishenko/Work/project/idest/frontend/components/breadcrumbs.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nvar convertBreadcrumb = function convertBreadcrumb(string) {\n  return string.replace(/-/g, ' ').replace(/oe/g, 'ö').replace(/ae/g, 'ä').replace(/ue/g, 'ü');\n};\n\nvar Breadcrumbs = function Breadcrumbs() {\n  _s();\n\n  var router = useRouter();\n\n  var _useState = useState(null),\n      breadcrumbs = _useState[0],\n      setBreadcrumbs = _useState[1];\n\n  useEffect(function () {\n    if (router) {\n      var linkPath = router.asPath.split('/');\n      linkPath.shift();\n      var pathArray = linkPath.map(function (path, i) {\n        return {\n          breadcrumb: path,\n          href: '/' + linkPath.slice(0, i + 1).join('/')\n        };\n      });\n      setBreadcrumbs(pathArray);\n    }\n  }, [router]);\n\n  if (!breadcrumbs) {\n    return null;\n  }\n\n  return __jsx(\"section\", {\n    className: \"headerBreadcrumbs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"nav\", {\n    \"aria-label\": \"breadcrumbs\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, __jsx(\"ol\", {\n    className: \"breadcrumb\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, __jsx(\"li\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, __jsx(\"a\", {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  }, \"Home\")), breadcrumbs.map(function (breadcrumb, i) {\n    return __jsx(\"li\", {\n      key: breadcrumb.href,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }\n    }, __jsx(Link, {\n      href: breadcrumb.href,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 37\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 41\n      }\n    }, \"f\", convertBreadcrumb(breadcrumb.breadcrumb))));\n  })))));\n};\n\n_s(Breadcrumbs, \"JHjLv+6W/PY975mVYth7LeJ/BwQ=\", false, function () {\n  return [useRouter];\n});\n\n_c = Breadcrumbs;\nexport default Breadcrumbs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Breadcrumbs\");","map":{"version":3,"sources":["/Users/vladtishenko/Work/project/idest/frontend/components/breadcrumbs.js"],"names":["React","useEffect","useState","useRouter","Link","convertBreadcrumb","string","replace","Breadcrumbs","router","breadcrumbs","setBreadcrumbs","linkPath","asPath","split","shift","pathArray","map","path","i","breadcrumb","href","slice","join"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAAC,MAAM,EAAI;AAChC,SAAOA,MAAM,CACRC,OADE,CACM,IADN,EACY,GADZ,EAEFA,OAFE,CAEM,KAFN,EAEa,GAFb,EAGFA,OAHE,CAGM,KAHN,EAGa,GAHb,EAIFA,OAJE,CAIM,KAJN,EAIa,GAJb,CAAP;AAKH,CAND;;AAQA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAAA;;AACtB,MAAMC,MAAM,GAAGN,SAAS,EAAxB;;AADsB,kBAEgBD,QAAQ,CAAC,IAAD,CAFxB;AAAA,MAEfQ,WAFe;AAAA,MAEFC,cAFE;;AAItBV,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIQ,MAAJ,EAAY;AACR,UAAMG,QAAQ,GAAGH,MAAM,CAACI,MAAP,CAAcC,KAAd,CAAoB,GAApB,CAAjB;AACAF,MAAAA,QAAQ,CAACG,KAAT;AAEA,UAAMC,SAAS,GAAGJ,QAAQ,CAACK,GAAT,CAAa,UAACC,IAAD,EAAOC,CAAP,EAAa;AACxC,eAAO;AAAEC,UAAAA,UAAU,EAAEF,IAAd;AAAoBG,UAAAA,IAAI,EAAE,MAAMT,QAAQ,CAACU,KAAT,CAAe,CAAf,EAAkBH,CAAC,GAAG,CAAtB,EAAyBI,IAAzB,CAA8B,GAA9B;AAAhC,SAAP;AACH,OAFiB,CAAlB;AAIAZ,MAAAA,cAAc,CAACK,SAAD,CAAd;AACH;AACJ,GAXQ,EAWN,CAACP,MAAD,CAXM,CAAT;;AAaA,MAAI,CAACC,WAAL,EAAkB;AACd,WAAO,IAAP;AACH;;AAED,SACI;AAAS,IAAA,SAAS,EAAC,mBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,kBAAW,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAG,IAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ,EAIKA,WAAW,CAACO,GAAZ,CAAgB,UAACG,UAAD,EAAaD,CAAb,EAAmB;AAChC,WACI;AAAI,MAAA,GAAG,EAAEC,UAAU,CAACC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAED,UAAU,CAACC,IAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACMhB,iBAAiB,CAACe,UAAU,CAACA,UAAZ,CADvB,CADJ,CADJ,CADJ;AASH,GAVA,CAJL,CADJ,CADJ,CADJ,CADJ;AAwBH,CA7CD;;GAAMZ,W;UACaL,S;;;KADbK,W;AA+CN,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\n\nconst convertBreadcrumb = string => {\n    return string\n        .replace(/-/g, ' ')\n        .replace(/oe/g, 'ö')\n        .replace(/ae/g, 'ä')\n        .replace(/ue/g, 'ü');\n};\n\nconst Breadcrumbs = () => {\n    const router = useRouter();\n    const [breadcrumbs, setBreadcrumbs] = useState(null);\n\n    useEffect(() => {\n        if (router) {\n            const linkPath = router.asPath.split('/');\n            linkPath.shift();\n\n            const pathArray = linkPath.map((path, i) => {\n                return { breadcrumb: path, href: '/' + linkPath.slice(0, i + 1).join('/') };\n            });\n\n            setBreadcrumbs(pathArray);\n        }\n    }, [router]);\n\n    if (!breadcrumbs) {\n        return null;\n    }\n\n    return (\n        <section className=\"headerBreadcrumbs\">\n            <div className=\"container\">\n                <nav aria-label=\"breadcrumbs\">\n                    <ol className=\"breadcrumb\">\n                        <li>\n                            <a href=\"/\">Home</a>\n                        </li>\n                        {breadcrumbs.map((breadcrumb, i) => {\n                            return (\n                                <li key={breadcrumb.href}>\n                                    <Link href={breadcrumb.href}>\n                                        <a>\n                                            f{convertBreadcrumb(breadcrumb.breadcrumb)}\n                                        </a>\n                                    </Link>\n                                </li>\n                            );\n                        })}\n                    </ol>\n                </nav>\n            </div>\n        </section>\n    );\n};\n\nexport default Breadcrumbs;"]},"metadata":{},"sourceType":"module"}