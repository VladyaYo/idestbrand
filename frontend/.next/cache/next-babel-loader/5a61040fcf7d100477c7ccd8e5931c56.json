{"ast":null,"code":"var _jsxFileName = \"/Users/vladtishenko/Work/project/idest/frontend/pages/projects/[slug].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Articles from \"../../components/articles\";\nimport { fetchAPI } from \"../../lib/api\";\nimport Layout from \"../../components/layout\";\nimport Seo from \"../../components/seo\";\n\nconst Category = ({\n  category,\n  categories\n}) => {\n  const seo = {\n    metaTitle: category.name,\n    metaDescription: `All ${category.name} articles`\n  };\n  return __jsx(Layout, {\n    categories: categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(Seo, {\n    seo: seo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    className: \"uk-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"uk-container uk-container-large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, category.name), __jsx(Articles, {\n    articles: category.articles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport async function getStaticPaths() {\n  const categories = await fetchAPI(\"/categories\");\n  return {\n    paths: categories.map(category => ({\n      params: {\n        slug: category.slug\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const category = (await fetchAPI(`/categories?slug=${params.slug}`))[0];\n  const categories = await fetchAPI(\"/categories\");\n  return {\n    props: {\n      category,\n      categories\n    },\n    revalidate: 1\n  };\n}\nexport default Category;","map":{"version":3,"sources":["/Users/vladtishenko/Work/project/idest/frontend/pages/projects/[slug].js"],"names":["Articles","fetchAPI","Layout","Seo","Category","category","categories","seo","metaTitle","name","metaDescription","articles","getStaticPaths","paths","map","params","slug","fallback","getStaticProps","props","revalidate"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,2BAArB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA8B;AAC3C,QAAMC,GAAG,GAAG;AACRC,IAAAA,SAAS,EAAEH,QAAQ,CAACI,IADZ;AAERC,IAAAA,eAAe,EAAG,OAAML,QAAQ,CAACI,IAAK;AAF9B,GAAZ;AAKA,SACI,MAAC,MAAD;AAAQ,IAAA,UAAU,EAAEH,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,QAAQ,CAACI,IAAd,CADJ,EAEI,MAAC,QAAD;AAAU,IAAA,QAAQ,EAAEJ,QAAQ,CAACM,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CAFJ,CADJ;AAWH,CAjBD;;AAmBA,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMN,UAAU,GAAG,MAAML,QAAQ,CAAC,aAAD,CAAjC;AAEA,SAAO;AACHY,IAAAA,KAAK,EAAEP,UAAU,CAACQ,GAAX,CAAgBT,QAAD,KAAe;AACjCU,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAEX,QAAQ,CAACW;AADX;AADyB,KAAf,CAAf,CADJ;AAMHC,IAAAA,QAAQ,EAAE;AANP,GAAP;AAQH;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEH,EAAAA;AAAF,CAA9B,EAA0C;AAC7C,QAAMV,QAAQ,GAAG,CAAC,MAAMJ,QAAQ,CAAE,oBAAmBc,MAAM,CAACC,IAAK,EAAjC,CAAf,EAAoD,CAApD,CAAjB;AACA,QAAMV,UAAU,GAAG,MAAML,QAAQ,CAAC,aAAD,CAAjC;AAEA,SAAO;AACHkB,IAAAA,KAAK,EAAE;AAAEd,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KADJ;AAEHc,IAAAA,UAAU,EAAE;AAFT,GAAP;AAIH;AAED,eAAehB,QAAf","sourcesContent":["import Articles from \"../../components/articles\";\nimport { fetchAPI } from \"../../lib/api\";\nimport Layout from \"../../components/layout\";\nimport Seo from \"../../components/seo\";\n\nconst Category = ({ category, categories }) => {\n    const seo = {\n        metaTitle: category.name,\n        metaDescription: `All ${category.name} articles`,\n    };\n\n    return (\n        <Layout categories={categories}>\n            <Seo seo={seo} />\n            <div className=\"uk-section\">\n                <div className=\"uk-container uk-container-large\">\n                    <h1>{category.name}</h1>\n                    <Articles articles={category.articles} />\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport async function getStaticPaths() {\n    const categories = await fetchAPI(\"/categories\");\n\n    return {\n        paths: categories.map((category) => ({\n            params: {\n                slug: category.slug,\n            },\n        })),\n        fallback: false,\n    };\n}\n\nexport async function getStaticProps({ params }) {\n    const category = (await fetchAPI(`/categories?slug=${params.slug}`))[0];\n    const categories = await fetchAPI(\"/categories\");\n\n    return {\n        props: { category, categories },\n        revalidate: 1,\n    };\n}\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}