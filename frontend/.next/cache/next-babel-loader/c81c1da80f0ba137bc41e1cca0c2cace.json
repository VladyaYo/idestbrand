{"ast":null,"code":"var _jsxFileName = \"/Users/vladtishenko/Work/project/idest/frontend/pages/approach/[slug].js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\";\nimport { fetchAPI } from \"../../lib/api\";\nimport Layout from \"../../components/layout\";\nimport Image from \"../../components/image\";\nimport Seo from \"../../components/seo\";\nimport Text from \"../../components/text\";\nimport { getStrapiMedia } from \"../../lib/media\";\nimport Hero from \"../../components/hero\";\nimport FullScreenVideo from \"../../components/fullScreenVideo\";\nimport FullScreenImage from \"../../components/fullscreenImage\";\nimport ContainerVideo from \"../../components/containerVideo\";\nimport ContainerImage from \"../../components/containerImage\";\nimport Breadcrumbs from \"../../components/breadcrumbs\";\nimport MoreProjects from \"../../components/moreProjects\";\n\nconst Approach = ({\n  approach,\n  approaches\n}) => {\n  // const imageUrl = getStrapiMedia(approach.image);\n  const example = Breadcrumbs();\n  const seo = {\n    metaTitle: approach.title,\n    metaDescription: approach.description,\n    shareImage: approach.image,\n    article: true\n  };\n\n  const renderContent = content => {\n    switch (content.__component) {\n      case 'sections.fullscreen-image':\n        return __jsx(FullScreenImage, {\n          key: `${content.__component} + ${content.id}`,\n          image: content,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 24\n          }\n        });\n\n      case 'sections.text':\n        return __jsx(Text, {\n          key: `${content.__component} + ${content.id}`,\n          text: content,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 24\n          }\n        });\n\n      case 'sections.video':\n        return __jsx(FullScreenVideo, {\n          key: `${content.__component} + ${content.id}`,\n          video: content,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 24\n          }\n        });\n\n      case 'sections.video-container':\n        return __jsx(ContainerVideo, {\n          key: `${content.__component} + ${content.id}`,\n          video: content,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 24\n          }\n        });\n\n      case 'sections.image':\n        return __jsx(ContainerImage, {\n          key: `${content.__component} + ${content.id}`,\n          image: content,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return null;\n    }\n  };\n\n  return __jsx(Layout, {\n    pageClass: \"singleApproach\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, approach.contentBlock.map(content => renderContent(content)));\n};\n\nexport async function getStaticPaths() {\n  const approaches = await fetchAPI(\"/approaches\");\n  return {\n    paths: approaches.map(approach => ({\n      params: {\n        slug: approach.slug\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const [approach, approaches] = await Promise.all([fetchAPI(`/approaches?slug=${params.slug}`), fetchAPI(\"/approaches\")]);\n  return {\n    props: {\n      approach: approach[0],\n      approaches\n    },\n    revalidate: 1\n  };\n}\nexport default Approach;","map":{"version":3,"sources":["/Users/vladtishenko/Work/project/idest/frontend/pages/approach/[slug].js"],"names":["React","Component","ReactMarkdown","Moment","fetchAPI","Layout","Image","Seo","Text","getStrapiMedia","Hero","FullScreenVideo","FullScreenImage","ContainerVideo","ContainerImage","Breadcrumbs","MoreProjects","Approach","approach","approaches","example","seo","metaTitle","title","metaDescription","description","shareImage","image","article","renderContent","content","__component","id","contentBlock","map","getStaticPaths","paths","params","slug","fallback","getStaticProps","Promise","all","props","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA+B;AAC5C;AACA,QAAMC,OAAO,GAAGL,WAAW,EAA3B;AAEA,QAAMM,GAAG,GAAG;AACRC,IAAAA,SAAS,EAAEJ,QAAQ,CAACK,KADZ;AAERC,IAAAA,eAAe,EAAEN,QAAQ,CAACO,WAFlB;AAGRC,IAAAA,UAAU,EAAER,QAAQ,CAACS,KAHb;AAIRC,IAAAA,OAAO,EAAE;AAJD,GAAZ;;AASA,QAAMC,aAAa,GAAGC,OAAO,IAAI;AAC7B,YAAQA,OAAO,CAACC,WAAhB;AACI,WAAK,2BAAL;AACI,eAAO,MAAC,eAAD;AAAiB,UAAA,GAAG,EAAG,GAAED,OAAO,CAACC,WAAY,MAAKD,OAAO,CAACE,EAAG,EAA7D;AAAgE,UAAA,KAAK,EAAEF,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,eAAL;AACI,eAAO,MAAC,IAAD;AAAM,UAAA,GAAG,EAAG,GAAEA,OAAO,CAACC,WAAY,MAAKD,OAAO,CAACE,EAAG,EAAlD;AAAqD,UAAA,IAAI,EAAEF,OAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,gBAAL;AACI,eAAO,MAAC,eAAD;AAAiB,UAAA,GAAG,EAAG,GAAEA,OAAO,CAACC,WAAY,MAAKD,OAAO,CAACE,EAAG,EAA7D;AAAgE,UAAA,KAAK,EAAEF,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,0BAAL;AACI,eAAO,MAAC,cAAD;AAAgB,UAAA,GAAG,EAAG,GAAEA,OAAO,CAACC,WAAY,MAAKD,OAAO,CAACE,EAAG,EAA5D;AAA+D,UAAA,KAAK,EAAEF,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,gBAAL;AACI,eAAO,MAAC,cAAD;AAAgB,UAAA,GAAG,EAAG,GAAEA,OAAO,CAACC,WAAY,MAAKD,OAAO,CAACE,EAAG,EAA5D;AAA+D,UAAA,KAAK,EAAEF,OAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ;AACI,eAAO,IAAP;AAZR;AAcH,GAfD;;AAgBA,SACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKZ,QAAQ,CAACe,YAAT,CAAsBC,GAAtB,CAA2BJ,OAAD,IAAaD,aAAa,CAACC,OAAD,CAApD,CAJL,CADJ;AASH,CAtCD;;AAwCA,OAAO,eAAeK,cAAf,GAAgC;AACnC,QAAMhB,UAAU,GAAG,MAAMf,QAAQ,CAAC,aAAD,CAAjC;AACA,SAAO;AACHgC,IAAAA,KAAK,EAAEjB,UAAU,CAACe,GAAX,CAAgBhB,QAAD,KAAe;AACjCmB,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAEpB,QAAQ,CAACoB;AADX;AADyB,KAAf,CAAf,CADJ;AAMHC,IAAAA,QAAQ,EAAE;AANP,GAAP;AAQH;AAGD,OAAO,eAAeC,cAAf,CAA8B;AAAEH,EAAAA;AAAF,CAA9B,EAA0C;AAC7C,QAAM,CAACnB,QAAD,EAAWC,UAAX,IAAyB,MAAMsB,OAAO,CAACC,GAAR,CAAY,CACzCtC,QAAQ,CAAE,oBAAmBiC,MAAM,CAACC,IAAK,EAAjC,CADiC,EAEzClC,QAAQ,CAAC,aAAD,CAFiC,CAAZ,CAArC;AAMA,SAAO;AACHuC,IAAAA,KAAK,EAAE;AAAEzB,MAAAA,QAAQ,EAAEA,QAAQ,CAAC,CAAD,CAApB;AAAyBC,MAAAA;AAAzB,KADJ;AAEHyB,IAAAA,UAAU,EAAE;AAFT,GAAP;AAIH;AAED,eAAe3B,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\";\nimport { fetchAPI } from \"../../lib/api\";\nimport Layout from \"../../components/layout\";\nimport Image from \"../../components/image\";\nimport Seo from \"../../components/seo\";\nimport Text from \"../../components/text\";\nimport { getStrapiMedia } from \"../../lib/media\";\nimport Hero from \"../../components/hero\";\nimport FullScreenVideo from \"../../components/fullScreenVideo\";\nimport FullScreenImage from \"../../components/fullscreenImage\";\nimport ContainerVideo from \"../../components/containerVideo\"\nimport ContainerImage from \"../../components/containerImage\";\nimport Breadcrumbs from \"../../components/breadcrumbs\";\nimport MoreProjects from \"../../components/moreProjects\";\n\nconst Approach = ({ approach, approaches  }) => {\n    // const imageUrl = getStrapiMedia(approach.image);\n    const example = Breadcrumbs()\n\n    const seo = {\n        metaTitle: approach.title,\n        metaDescription: approach.description,\n        shareImage: approach.image,\n        article: true,\n    };\n\n\n\n    const renderContent = content => {\n        switch (content.__component) {\n            case 'sections.fullscreen-image' :\n                return <FullScreenImage key={`${content.__component} + ${content.id}`} image={content}/>\n            case 'sections.text' :\n                return <Text key={`${content.__component} + ${content.id}`} text={content}/>\n            case 'sections.video' :\n                return <FullScreenVideo key={`${content.__component} + ${content.id}`} video={content}/>\n            case 'sections.video-container' :\n                return <ContainerVideo key={`${content.__component} + ${content.id}`} video={content}/>\n            case 'sections.image' :\n                return <ContainerImage key={`${content.__component} + ${content.id}`} image={content}/>\n            default:\n                return null\n        }\n    }\n    return (\n        <Layout pageClass=\"singleApproach\">\n            {/*<Seo seo={seo} />*/}\n            {/*<Breadcrumbs/>*/}\n            {/*<Hero hero={approach.hero}/>*/}\n            {approach.contentBlock.map((content) => renderContent(content))}\n            {/*<MoreProjects articles={approaches} current={approach}/>*/}\n        </Layout>\n    );\n};\n\nexport async function getStaticPaths() {\n    const approaches = await fetchAPI(\"/approaches\");\n    return {\n        paths: approaches.map((approach) => ({\n            params: {\n                slug: approach.slug,\n            },\n        })),\n        fallback: false,\n    };\n}\n\n\nexport async function getStaticProps({ params }) {\n    const [approach, approaches] = await Promise.all([\n            fetchAPI(`/approaches?slug=${params.slug}`),\n            fetchAPI(\"/approaches\"),\n        ]\n    );\n\n    return {\n        props: { approach: approach[0], approaches },\n        revalidate: 1,\n    };\n}\n\nexport default Approach;\n"]},"metadata":{},"sourceType":"module"}