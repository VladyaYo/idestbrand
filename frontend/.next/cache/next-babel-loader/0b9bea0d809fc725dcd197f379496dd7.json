{"ast":null,"code":"var _jsxFileName = \"/Users/vladtishenko/Work/project/idest/frontend/pages/projects/[slug].js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\";\nimport { fetchAPI } from \"../../lib/api\";\nimport Layout from \"../../components/layout\";\nimport Image from \"../../components/image\";\nimport Seo from \"../../components/seo\";\nimport Text from \"../../components/text\";\nimport { getStrapiMedia } from \"../../lib/media\";\nimport Hero from \"../../components/hero\"; // import { Breadcrumbs } from 'nextjs-breadcrumbs'\n\nconst Project = ({\n  projects,\n  seo\n}) => {\n  // const imageUrl = getStrapiMedia(projects.image);\n  // const example = Breadcrumbs()\n  // const seo = {\n  //     metaTitle: project.title,\n  //     metaDescription: project.description,\n  //     shareImage: project.image,\n  //     article: true,\n  // };\n  // console.log(params.slug)\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(Seo, {\n    seo: seo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }), __jsx(Hero, {\n    hero: projects.hero,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), projects.text ? __jsx(Text, {\n    text: projects.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 30\n    }\n  }) : '', projects.contentBlock.map(content => content.text && __jsx(Text, {\n    key: content.id,\n    text: content.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport async function getStaticPaths() {\n  const projects = await fetchAPI(\"/projects\");\n  return {\n    paths: projects.map(project => ({\n      params: {\n        slug: project.slug\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const projects = await fetchAPI(`/projects?slug=${params.slug}`);\n  return {\n    props: {\n      projects: projects[0]\n    },\n    revalidate: 1\n  };\n}\nexport default Project;","map":{"version":3,"sources":["/Users/vladtishenko/Work/project/idest/frontend/pages/projects/[slug].js"],"names":["React","Component","ReactMarkdown","Moment","fetchAPI","Layout","Image","Seo","Text","getStrapiMedia","Hero","Project","projects","seo","hero","text","contentBlock","map","content","id","getStaticPaths","paths","project","params","slug","fallback","getStaticProps","props","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,QAAT,QAAyB,eAAzB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,OAAOC,GAAP,MAAgB,sBAAhB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAOC,IAAP,MAAiB,uBAAjB,C,CACA;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AACpC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACJ;AACI,SACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEA,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,MAAC,IAAD;AAAM,IAAA,IAAI,EAAED,QAAQ,CAACE,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGKF,QAAQ,CAACG,IAAT,GAAgB,MAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,QAAQ,CAACG,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAhB,GAA6C,EAHlD,EAIKH,QAAQ,CAACI,YAAT,CAAsBC,GAAtB,CAA0BC,OAAO,IAC9BA,OAAO,CAACH,IAAR,IACA,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEG,OAAO,CAACC,EAAnB;AAAuB,IAAA,IAAI,EAAED,OAAO,CAACH,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,CAJL,CADJ;AAYH,CAvBD;;AAyBA,OAAO,eAAeK,cAAf,GAAgC;AACnC,QAAMR,QAAQ,GAAG,MAAMR,QAAQ,CAAC,WAAD,CAA/B;AACA,SAAO;AACHiB,IAAAA,KAAK,EAAET,QAAQ,CAACK,GAAT,CAAcK,OAAD,KAAc;AAC9BC,MAAAA,MAAM,EAAE;AACJC,QAAAA,IAAI,EAAEF,OAAO,CAACE;AADV;AADsB,KAAd,CAAb,CADJ;AAMHC,IAAAA,QAAQ,EAAE;AANP,GAAP;AAQH;AAED,OAAO,eAAeC,cAAf,CAA8B;AAAEH,EAAAA;AAAF,CAA9B,EAA0C;AAC7C,QAAMX,QAAQ,GAAG,MAAMR,QAAQ,CAC1B,kBAAiBmB,MAAM,CAACC,IAAK,EADH,CAA/B;AAKA,SAAO;AACHG,IAAAA,KAAK,EAAE;AAAEf,MAAAA,QAAQ,EAAEA,QAAQ,CAAC,CAAD;AAApB,KADJ;AAEHgB,IAAAA,UAAU,EAAE;AAFT,GAAP;AAIH;AAED,eAAejB,OAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\";\nimport { fetchAPI } from \"../../lib/api\";\nimport Layout from \"../../components/layout\";\nimport Image from \"../../components/image\";\nimport Seo from \"../../components/seo\";\nimport Text from \"../../components/text\";\nimport { getStrapiMedia } from \"../../lib/media\";\nimport Hero from \"../../components/hero\";\n// import { Breadcrumbs } from 'nextjs-breadcrumbs'\n\nconst Project = ({ projects, seo  }) => {\n    // const imageUrl = getStrapiMedia(projects.image);\n    // const example = Breadcrumbs()\n\n    // const seo = {\n    //     metaTitle: project.title,\n    //     metaDescription: project.description,\n    //     shareImage: project.image,\n    //     article: true,\n    // };\n// console.log(params.slug)\n    return (\n        <Layout >\n            <Seo seo={seo} />\n            <Hero hero={projects.hero}/>\n            {projects.text ? <Text text={projects.text}/>:''}\n            {projects.contentBlock.map(content => (\n                content.text &&\n                <Text key={content.id} text={content.text}/>\n            ))}\n\n        </Layout>\n    );\n};\n\nexport async function getStaticPaths() {\n    const projects = await fetchAPI(\"/projects\");\n    return {\n        paths: projects.map((project) => ({\n            params: {\n                slug: project.slug,\n            },\n        })),\n        fallback: false,\n    };\n}\n\nexport async function getStaticProps({ params }) {\n    const projects = await fetchAPI(\n        `/projects?slug=${params.slug}`\n    );\n\n\n    return {\n        props: { projects: projects[0] },\n        revalidate: 1,\n    };\n}\n\nexport default Project;\n"]},"metadata":{},"sourceType":"module"}