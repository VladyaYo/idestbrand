{"ast":null,"code":"var _jsxFileName = \"/Users/vladtishenko/Work/project/idest/frontend/pages/vacancies.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport classnames from \"classnames\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { fetchAPI } from \"../lib/api\";\nimport VacanciesCard from \"../components/vacanciesCards\";\nimport ModalVacancies from \"../components/Modal/modalVacancies\";\nimport { Form, Input, Modal, Button } from \"antd\";\n\nconst Vacancies = ({\n  vacancies,\n  categories,\n  homepage\n}) => {\n  const {\n    0: isModalVisible,\n    1: setIsModalVisible\n  } = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleOk = () => {\n    setIsModalVisible(false);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const onFinish = values => {\n    console.log('Success:', values);\n  };\n\n  const onFinishFailed = errorInfo => {\n    console.log('Failed:', errorInfo);\n  };\n\n  return __jsx(Layout, {\n    pageClass: \"vacancies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(Seo, {\n    seo: homepage.seo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }), __jsx(\"section\", {\n    className: \"head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, vacancies.main.heading), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, vacancies.main.about)))), __jsx(\"section\", {\n    className: \"vacanciesCards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, vacancies.CardVacancies ? vacancies.CardVacancies.map(card => {\n    return __jsx(VacanciesCard, {\n      key: card.id,\n      card: card,\n      showModal: showModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    }) // console.log(card)\n    ;\n  }) : null)), __jsx(Modal, {\n    title: \"Apply for a vacancy\",\n    visible: isModalVisible,\n    onOk: handleOk // onCancel={handleCancel}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(Form, {\n    name: \"Apply for a vacancy\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    onFinishFailed: onFinishFailed,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Item, {\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: 'Please input your name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, __jsx(Input, {\n    placeholder: \"Username*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  })), __jsx(Form.Item, {\n    name: \"email\",\n    rules: [{\n      type: 'email',\n      required: true,\n      message: 'Please input your name!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, __jsx(Input, {\n    placeholder: \"Email*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 25\n    }\n  })), __jsx(Form.Item, {\n    name: \"phone\",\n    rules: [{\n      required: true,\n      message: 'Please input your phone number!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, __jsx(Input, {\n    placeholder: \"Phone Number*\",\n    style: {\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport async function getStaticProps() {\n  // Run API calls in parallel\n  const [vacancies, homepage] = await Promise.all([fetchAPI(\"/vacancies\"), fetchAPI(\"/homepage\")]);\n  return {\n    props: {\n      vacancies,\n      homepage\n    },\n    revalidate: 1\n  };\n}\nexport default Vacancies;","map":{"version":3,"sources":["/Users/vladtishenko/Work/project/idest/frontend/pages/vacancies.js"],"names":["React","useState","classnames","Layout","Seo","fetchAPI","VacanciesCard","ModalVacancies","Form","Input","Modal","Button","Vacancies","vacancies","categories","homepage","isModalVisible","setIsModalVisible","showModal","handleOk","handleCancel","onFinish","values","console","log","onFinishFailed","errorInfo","seo","main","heading","about","CardVacancies","map","card","id","remember","required","message","type","width","getStaticProps","Promise","all","props","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,KAArB,EAA4BC,MAA5B,QAAyC,MAAzC;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA;AAAzB,CAAD,KAA2C;AACzD,QAAM;AAAA,OAACC,cAAD;AAAA,OAAiBC;AAAjB,MAAsChB,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAMiB,SAAS,GAAG,MAAM;AACpBD,IAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,GAFD;;AAIA,QAAME,QAAQ,GAAG,MAAM;AACnBF,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAFD;;AAIA,QAAMG,YAAY,GAAG,MAAM;AACvBH,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACH,GAFD;;AAGA,QAAMI,QAAQ,GAAIC,MAAD,IAAY;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AACH,GAFD;;AAIA,QAAMG,cAAc,GAAIC,SAAD,IAAe;AAClCH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBE,SAAvB;AACH,GAFD;;AAIA,SACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,GAAG,EAAEX,QAAQ,CAACY,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAS,IAAA,SAAS,EAAC,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKd,SAAS,CAACe,IAAV,CAAeC,OAApB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIhB,SAAS,CAACe,IAAV,CAAeE,KAAnB,CAFJ,CADJ,CADJ,CAFJ,EAUI;AAAS,IAAA,SAAS,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMjB,SAAS,CAACkB,aAAV,GACElB,SAAS,CAACkB,aAAV,CAAwBC,GAAxB,CAA6BC,IAAD,IAAU;AAClC,WACI,MAAC,aAAD;AAAgB,MAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,MAAA,IAAI,EAAED,IAApC;AAA0C,MAAA,SAAS,EAAEf,SAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAEI;AAFJ;AAGE,GAJN,CADF,GAMI,IAPV,CADJ,CAVJ,EAsBI,MAAC,KAAD;AAAO,IAAA,KAAK,EAAC,qBAAb;AACI,IAAA,OAAO,EAAEF,cADb;AAEI,IAAA,IAAI,EAAEG,QAFV,CAGI;AAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,IAAD;AACI,IAAA,IAAI,EAAC,qBADT;AAEI,IAAA,aAAa,EAAE;AAAEgB,MAAAA,QAAQ,EAAE;AAAZ,KAFnB;AAGI,IAAA,QAAQ,EAAEd,QAHd;AAII,IAAA,cAAc,EAAEI,cAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI,MAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,KAAK,EAAE,CAAC;AAAEW,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,MAAC,KAAD;AAAO,IAAA,WAAW,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CANJ,EAYI,MAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAE,CAAC;AAACC,MAAAA,IAAI,EAAE,OAAP;AAAgBF,MAAAA,QAAQ,EAAE,IAA1B;AAAgCC,MAAAA,OAAO,EAAE;AAAzC,KAAD,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,MAAC,KAAD;AAAO,IAAA,WAAW,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAZJ,EAkBI,MAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,OADT;AAEI,IAAA,KAAK,EAAE,CAAC;AAAED,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,MAAC,KAAD;AAAO,IAAA,WAAW,EAAC,eAAnB;AAAmC,IAAA,KAAK,EAAE;AAAEE,MAAAA,KAAK,EAAE;AAAT,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAlBJ,CALJ,CAtBJ,CADJ;AAwDH,CA9ED;;AA+EA,OAAO,eAAeC,cAAf,GAAgC;AACnC;AACA,QAAM,CAAC3B,SAAD,EAAYE,QAAZ,IAAwB,MAAM0B,OAAO,CAACC,GAAR,CAAY,CAC5CrC,QAAQ,CAAC,YAAD,CADoC,EAE5CA,QAAQ,CAAC,WAAD,CAFoC,CAAZ,CAApC;AAKA,SAAO;AACHsC,IAAAA,KAAK,EAAE;AAAE9B,MAAAA,SAAF;AAAaE,MAAAA;AAAb,KADJ;AAEH6B,IAAAA,UAAU,EAAE;AAFT,GAAP;AAIH;AACD,eAAehC,SAAf","sourcesContent":["import React, {useState} from \"react\";\nimport classnames from \"classnames\"\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport {fetchAPI} from \"../lib/api\";\nimport VacanciesCard from \"../components/vacanciesCards\";\nimport ModalVacancies from \"../components/Modal/modalVacancies\";\nimport {Form, Input, Modal, Button} from \"antd\";\n\n\nconst Vacancies = ({ vacancies, categories, homepage,  }) => {\n    const [isModalVisible, setIsModalVisible] = useState(false);\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleOk = () => {\n        setIsModalVisible(false);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n    const onFinish = (values) => {\n        console.log('Success:', values);\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log('Failed:', errorInfo);\n    };\n\n    return (\n        <Layout pageClass=\"vacancies\">\n            <Seo seo={homepage.seo} />\n            <section className=\"head\">\n                <div className=\"container\">\n                    <div className=\"text\">\n                        <h1>{vacancies.main.heading}</h1>\n                        <p>{vacancies.main.about}</p>\n                    </div>\n                </div>\n            </section>\n            <section className=\"vacanciesCards\">\n                <div className=\"container\">\n                    { vacancies.CardVacancies ?\n                        vacancies.CardVacancies.map((card) => {\n                            return(\n                                <VacanciesCard  key={card.id} card={card} showModal={showModal}/>\n                                // console.log(card)\n                            )})\n                        : null}\n                </div>\n            </section>\n            {/*<ModalVacancies />*/}\n            <Modal title=\"Apply for a vacancy\"\n                visible={isModalVisible}\n                onOk={handleOk}\n                // onCancel={handleCancel}\n            >\n                <Form\n                    name=\"Apply for a vacancy\"\n                    initialValues={{ remember: true }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                >\n                    <Form.Item\n                        name=\"username\"\n                        rules={[{ required: true, message: 'Please input your name!' }]}\n                    >\n                        <Input placeholder=\"Username*\"/>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"email\"\n                        rules={[{type: 'email', required: true, message: 'Please input your name!' }]}\n                    >\n                        <Input placeholder=\"Email*\" />\n                    </Form.Item>\n                    <Form.Item\n                        name=\"phone\"\n                        rules={[{ required: true, message: 'Please input your phone number!' }]}\n                    >\n                        <Input placeholder=\"Phone Number*\" style={{ width: '100%' }} />\n                    </Form.Item>\n                </Form>\n            </Modal>\n        </Layout>\n    );\n}\nexport async function getStaticProps() {\n    // Run API calls in parallel\n    const [vacancies, homepage] = await Promise.all([\n        fetchAPI(\"/vacancies\"),\n        fetchAPI(\"/homepage\"),\n    ]);\n\n    return {\n        props: { vacancies, homepage },\n        revalidate: 1,\n    };\n}\nexport default Vacancies;\n"]},"metadata":{},"sourceType":"module"}