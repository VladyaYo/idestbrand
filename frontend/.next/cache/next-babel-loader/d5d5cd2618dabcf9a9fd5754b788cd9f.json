{"ast":null,"code":"var _jsxFileName = \"/Users/vladtishenko/Work/project/idest/frontend/pages/projects/[slug].js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\";\nimport { fetchAPI } from \"../../lib/api\";\nimport Layout from \"../../components/layout\";\nimport Image from \"../../components/image\";\nimport Seo from \"../../components/seo\";\nimport Text from \"../../components/text\";\nimport { getStrapiMedia } from \"../../lib/media\";\nimport Hero from \"../../components/hero\";\nimport FullScreenVideo from \"../../components/fullScreenVideo\";\nimport FullScreenImage from \"../../components/fullscreenImage\";\nimport ContainerVideo from \"../../components/containerVideo\";\nimport ContainerImage from \"../../components/containerImage\";\nimport { Breadcrumbs } from 'nextjs-breadcrumbs'; // import { Breadcrumbs } from 'nextjs-breadcrumbs'\n\nconst Project = ({\n  projects,\n  seo\n}) => {\n  // const imageUrl = getStrapiMedia(projects.image);\n  // const example = Breadcrumbs()\n  // const seo = {\n  //     metaTitle: project.title,\n  //     metaDescription: project.description,\n  //     shareImage: project.image,\n  //     article: true,\n  // };\n  // console.log(params.slug)\n  const example = Breadcrumbs();\n\n  const renderContent = content => {\n    switch (content.__component) {\n      case 'sections.fullscreen-image':\n        return __jsx(FullScreenImage, {\n          key: `${content.__component} + ${content.id}`,\n          image: content,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 24\n          }\n        });\n\n      case 'sections.text':\n        return __jsx(Text, {\n          key: `${content.__component} + ${content.id}`,\n          text: content,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 24\n          }\n        });\n\n      case 'sections.video':\n        return __jsx(FullScreenVideo, {\n          key: `${content.__component} + ${content.id}`,\n          video: content,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 24\n          }\n        });\n\n      case 'sections.video-container':\n        return __jsx(ContainerVideo, {\n          key: `${content.__component} + ${content.id}`,\n          video: content,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 24\n          }\n        });\n\n      case 'sections.image':\n        return __jsx(ContainerImage, {\n          key: `${content.__component} + ${content.id}`,\n          image: content,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 24\n          }\n        });\n\n      default:\n        return null;\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, __jsx(Seo, {\n    seo: seo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, example), __jsx(Hero, {\n    hero: projects.hero,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), projects.contentBlock.map(content => renderContent(content)));\n};\n\nexport async function getStaticPaths() {\n  const projects = await fetchAPI(\"/projects\");\n  return {\n    paths: projects.map(project => ({\n      params: {\n        slug: project.slug\n      }\n    })),\n    fallback: false\n  };\n}\nexport async function getStaticProps({\n  params\n}) {\n  const projects = await fetchAPI(`/projects?slug=${params.slug}`);\n  return {\n    props: {\n      projects: projects[0]\n    },\n    revalidate: 1\n  };\n}\nexport default Project;","map":{"version":3,"sources":["/Users/vladtishenko/Work/project/idest/frontend/pages/projects/[slug].js"],"names":["React","Component","ReactMarkdown","Moment","fetchAPI","Layout","Image","Seo","Text","getStrapiMedia","Hero","FullScreenVideo","FullScreenImage","ContainerVideo","ContainerImage","Breadcrumbs","Project","projects","seo","example","renderContent","content","__component","id","hero","contentBlock","map","getStaticPaths","paths","project","params","slug","fallback","getStaticProps","props","revalidate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactMarkdown from \"react-markdown\";\nimport Moment from \"react-moment\";\nimport { fetchAPI } from \"../../lib/api\";\nimport Layout from \"../../components/layout\";\nimport Image from \"../../components/image\";\nimport Seo from \"../../components/seo\";\nimport Text from \"../../components/text\";\nimport { getStrapiMedia } from \"../../lib/media\";\nimport Hero from \"../../components/hero\";\nimport FullScreenVideo from \"../../components/fullScreenVideo\";\nimport FullScreenImage from \"../../components/fullscreenImage\";\nimport ContainerVideo from \"../../components/containerVideo\"\nimport ContainerImage from \"../../components/containerImage\";\nimport { Breadcrumbs } from 'nextjs-breadcrumbs'\n// import { Breadcrumbs } from 'nextjs-breadcrumbs'\n\nconst Project = ({ projects, seo  }) => {\n    // const imageUrl = getStrapiMedia(projects.image);\n    // const example = Breadcrumbs()\n\n    // const seo = {\n    //     metaTitle: project.title,\n    //     metaDescription: project.description,\n    //     shareImage: project.image,\n    //     article: true,\n    // };\n// console.log(params.slug)\n        const example = Breadcrumbs()\n\n    const renderContent = content => {\n        switch (content.__component) {\n            case 'sections.fullscreen-image' :\n                return <FullScreenImage key={`${content.__component} + ${content.id}`} image={content}/>\n            case 'sections.text' :\n                return <Text key={`${content.__component} + ${content.id}`} text={content}/>\n            case 'sections.video' :\n                return <FullScreenVideo key={`${content.__component} + ${content.id}`} video={content}/>\n            case 'sections.video-container' :\n                return <ContainerVideo key={`${content.__component} + ${content.id}`} video={content}/>\n            case 'sections.image' :\n                return <ContainerImage key={`${content.__component} + ${content.id}`} image={content}/>\n            default:\n                return null\n        }\n    }\n    return (\n        <Layout>\n            <Seo seo={seo} />\n            <div>{example}</div>\n            <Hero hero={projects.hero}/>\n            {projects.contentBlock.map((content) => renderContent(content))}\n        </Layout>\n    );\n};\n\nexport async function getStaticPaths() {\n    const projects = await fetchAPI(\"/projects\");\n    return {\n        paths: projects.map((project) => ({\n            params: {\n                slug: project.slug,\n            },\n        })),\n        fallback: false,\n    };\n}\n\nexport async function getStaticProps({ params }) {\n    const projects = await fetchAPI(\n        `/projects?slug=${params.slug}`\n    );\n\n\n    return {\n        props: { projects: projects[0] },\n        revalidate: 1,\n    };\n}\n\nexport default Project;\n"]},"metadata":{},"sourceType":"module"}